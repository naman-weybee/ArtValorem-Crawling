// <auto-generated />
using ArtValorem_Crawling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtValorem_Crawling.Migrations
{
    [DbContext(typeof(ArtValorem_DbContext))]
    partial class ArtValorem_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArtValorem_Crawling.Data.AuctionImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuctionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("tbl_Auction_Images");
                });

            modelBuilder.Entity("ArtValorem_Crawling.Data.Auctions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimationPriceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimationPriceEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimationPriceStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultPriceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleOfDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleOfYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Auctions");
                });

            modelBuilder.Entity("ArtValorem_Crawling.Data.AuctionImages", b =>
                {
                    b.HasOne("ArtValorem_Crawling.Data.Auctions", "Auction")
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });
#pragma warning restore 612, 618
        }
    }
}
